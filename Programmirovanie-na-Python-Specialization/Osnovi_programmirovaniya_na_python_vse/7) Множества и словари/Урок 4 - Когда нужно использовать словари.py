#s = input()
#letters = dict()
#for c in s:
#    letters[c] = letters.get(c, 0) + 1
#for c in sorted(letters):
#    print(c, letters[c])


gasCost = {}
n = int(input())
a92, a95, a98 = map(int, input().split())
gasCost[92] = a92
gasCost[95] = a95
gasCost[98] = a98
for i in range(n - 1):
    a92, a95, a98 = map(int, input().split())
    gasCost[92] = min(a92, gasCost[92])
    gasCost[95] = min(a95, gasCost[95])
    gasCost[98] = min(a98, gasCost[98])
print(gasCost[92], gasCost[95], gasCost[98])

# По прямому назначению: сопоставление ключа значению (названия дней недели, переводы слов и т. д.).
# Для подсчета числа объектов. При очередной встрече объекта счетчик увеличивается на единицу.
# Это похоже на сортировку подсчётом.
# Для хранения разреженных массивов.
# Например, если мы хотим хранить цену 92, 95 и 98 бензина, то могли бы создать массив из 99 элементов и хранить в нём.
# Но большая часть элементов не нужны - массив разреженный. Словарь здесь подходит больше.

# Для подсчета числа элементов удобно использовать метод get.
# Он принимает два параметра: ключ для которого нужно вернуть значения и значение, которое будет возвращено, если такого ключа нет.
# Например, подсчитать сколько раз входит в последовательность каждое из чисел можно с помощью такого кода: